---
# play -v -K -l osxserver server.yml
- hosts: osxserver
  gather_facts: False
  vars:
    - homedir: "{{ lookup('env','HOME') }}"
    - user: "{{ lookup('env','USER') }}"
  vars_files:
    - ../vars/server.yml

  roles:
    - ../roles/geerlingguy.homebrew

  tasks:
    - name: 'Make sure directories for Munki exist'
      shell: mkdir -p {{server_directory}}/munki_repo/{catalogs,manifests,pkgs,pkgsinfo,artwork,client_resources,icons}
      sudo: yes
      
    - name: 'Ensure ownership on directories for Munki'
      shell: chown -R {{user}}:staff {{server_directory}}/munki_repo/
      sudo: yes
      
    - name: 'Ensure ownership on directories for Munki'
      shell: chmod -R a+rX {{server_directory}}/munki_repo

    - name: 'set preference for munkiinstall'
      template: src=../templates/com.googlecode.munki.munkiimport.plist dest={{homedir}}/Library/Preferences/com.googlecode.munki.munkiimport.plist
      tags:
        - cfg
      
    - name: 'defaults write com.github.autopkg MUNKI_REPO'
      command: defaults write com.github.autopkg MUNKI_REPO {{server_directory}}/munki_repo
      tags:
        - cfg

    - name: 'download images'
      get_url: url={{item.url}} dest={{homedir}}/Downloads/{{item.dmg}}
      with_items: ansible_installed_diskimages
      retries: 3
      tags:
        - dmg

    - name: 'mount image'
      command: hdiutil mount {{homedir}}/Downloads/{{item.dmg}}
      with_items: ansible_installed_diskimages
      tags:
        - dmg

    - name: 'install app'
      shell: cp -a /Volumes/*/{{item.app}}.app /Applications creates=/Applications/{{item.app}}.app
      with_items: ansible_installed_diskimages
      tags:
        - app

    - name: 'unmount image'
      shell: hdiutil unmount /Volumes/{{item.app}}
      with_items: ansible_installed_diskimages
      ignore_errors: yes

    - name: 'download packages'
      get_url: url={{item.url}} dest={{homedir}}/Downloads/{{item.pkg}}
      with_items: ansible_installed_packages
      retries: 3
      tags:
        - pkg
        
    - name: 'install packages'
      command: installer -package {{homedir}}/Downloads/{{item.pkg}} -target /
      sudo: yes
      with_items: ansible_installed_packages
      tags:
        - pkg
        
    - name: 'adding recipes'
      command: autopkg repo-add {{item}}
      with_items: autopkg_recipes
      tags:
        - recipes

    - name: 'running recipes, ignoring non-idempotency'
      shell: autopkg run -v {{item}}.munki MakeCatalogs.munki
      with_items: munki_packages
      no_log: yes
      ignore_errors: yes
      tags:
        - run

    - name: 'Update catalogs for Munki'
      command: /usr/local/munki/makecatalogs {{server_directory}}/munki_repo
      tags:
        - cfg
        - run

    - name: 'Create default manifest for Munki'
      command: /usr/local/munki/manifestutil new-manifest testing
      ignore_errors: yes
      tags:
        - cfg     

    - name: 'Add default catalog to manifest'
      command: "/usr/local/munki/manifestutil add-catalog testing --manifest testing"
      ignore_errors: yes
      tags:
        - catalog
        - cfg    

    - name: 'Add default catalog to manifest'
      command: "/usr/local/munki/manifestutil add-pkg {{item}} --manifest testing --section optional_installs"
      with_items: munki_packages
      ignore_errors: yes
      tags:
        - catalog
        - cfg
        - run

    - name: 'Ensure ownership on directories for Munki'
      shell: chmod -R a+rX {{server_directory}}/munki_repo
      tags:
        - cfg
        - catalog

    - name: 'start apache'
      command: apachectl start
      sudo: yes
