{\rtf1\ansi\ansicpg1252\cocoartf1347\cocoasubrtf130
{\fonttbl\f0\fswiss\fcharset0 ArialMT;\f1\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red180\green36\blue25;\red47\green180\blue29;\red46\green174\blue187;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww12640\viewh12280\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf0 \CocoaLigature0 You can use this on a Mac to automatically install free software using one command. Having a high degree of automation in the OSX setup of our developers proved to be great for new joiners, they are productive in less than an hour.\
\
By default most options are disabled, as a minimum it installs the Ansible tool using brew, and virtualbox and vagrant. These tools are required by the buildserver project at https://github.com/bbaassssiiee/buildserver.git
\f1\fs20 \
\

\f0\fs28 You can add more apps & packages, or uncomment the suggested set, in vars/main.yml
\f1\fs20 \
\
\

\f0\fs28 Below is the ouput of the script in this repository. \

\f1\fs20 \
mac:developer_mac bassie$ ./install_on_my_mac.sh \
/Applications/Xcode.app/Contents/Developer/usr/bin/git\
/Applications/Xcode.app/Contents/Developer/usr/bin/git\
/Applications/Xcode.app/Contents/Developer/usr/bin/git\
\cf2 \ul \ulc2 Warning\cf0 \ulnone : ansible-1.8.3 already installed\
\cf2 \ul Warning\cf0 \ulnone : brew-cask-0.53.3 already installed\
- downloading role 'homebrew', owned by geerlingguy\
- downloading role from https://github.com/geerlingguy/ansible-role-homebrew/archive/1.2.2.tar.gz\
- extracting geerlingguy.homebrew to roles/geerlingguy.homebrew\
- geerlingguy.homebrew was installed successfully\
sudo password: \
\
PLAY [localhost] ************************************************************** \
\
GATHERING FACTS *************************************************************** \
\cf3 ok: [localhost]\cf0 \
\
TASK: [geerlingguy.homebrew | Setup homebrew install path.] ******************* \
\cf3 ok: [localhost]\cf0 \
\
TASK: [geerlingguy.homebrew | Ensure proper permissions on /usr/local dirs.] *** \
\cf3 ok: [localhost] => (item=/usr/local)\cf0 \
\cf3 ok: [localhost] => (item=/usr/local/bin)\cf0 \
\
TASK: [geerlingguy.homebrew | Ensure homebrew is installed.] ****************** \
\cf3 ok: [localhost]\cf0 \
\
TASK: [geerlingguy.homebrew | Check if homebrew binary is already in place.] *** \
\cf3 ok: [localhost]\cf0 \
\
TASK: [geerlingguy.homebrew | Symlink brew to /usr/local/bin/brew.] *********** \
\cf4 skipping: [localhost]\cf0 \
\
TASK: [geerlingguy.homebrew | Ensure configured taps are tapped.] ************* \
\cf3 ok: [localhost] => (item=caskroom/cask)\cf0 \
\cf3 ok: [localhost] => (item=homebrew/binary)\cf0 \
\cf3 ok: [localhost] => (item=homebrew/dupes)\cf0 \
\cf3 ok: [localhost] => (item=homebrew/versions)\cf0 \
\
TASK: [geerlingguy.homebrew | Ensure configured homebrew packages are installed.] *** \
\cf3 ok: [localhost] => (item=ansible)\cf0 \
\cf3 ok: [localhost] => (item=python)\cf0 \
\cf3 ok: [localhost] => (item=sqlite)\cf0 \
\cf3 ok: [localhost] => (item=ssh-copy-id)\cf0 \
\cf3 ok: [localhost] => (item=wget)\cf0 \
\
TASK: [geerlingguy.homebrew | Upgrade all homebrew packages (if configured).] *** \
\cf4 skipping: [localhost]\cf0 \
\
TASK: [geerlingguy.homebrew | Get list of apps installed with cask.] ********** \
\cf3 ok: [localhost]\cf0 \
\
TASK: [geerlingguy.homebrew | Install configured cask applications.] ********** \
\cf4 skipping: [localhost] => (item=vagrant)\cf0 \
\cf4 skipping: [localhost] => (item=virtualbox)\cf0 \
\
PLAY RECAP ******************************************************************** \
\cf3 localhost\cf0                   : \cf3 ok=9\cf0     changed=0    unreachable=0    failed=0   \
}